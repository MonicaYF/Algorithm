class Solution {
public:
    /*
    int shortestDistance(vector<string>& words, string word1, string word2) {
        int pos1 = INT_MAX;
        int pos2 = INT_MAX;
        int ans = INT_MAX;
        for (int i = 0; i < words.size(); i++) {
            cout << pos1 <<'\n';
            cout << pos2 <<'\n';
            if (words[i] == word1) {
                pos1 = i;
                ans = min(ans, abs(pos1 - pos2));
            }
            else if (words[i] == word2) {
                pos2 = i;
                ans = min(ans,abs(pos1 - pos2));
            }
        }
        return ans;        
    }
    */
    int shortestDistance(vector<string>& words, string word1, string word2) {
        int pos1 = -1;
        int pos2 = -1;
        int ans = INT_MAX;
        for (int i = 0; i < words.size(); i++) {
            if (words[i] == word1) {
                if (pos2 != -1) {
                    ans = min(ans, i - pos2);
                }
                pos1 = i;
            }
            else if (words[i] == word2) {
                if (pos1 != -1) {
                    ans = min(ans, i - pos1);
                }
                pos2 = i;
            }
        }
        return ans;
        
    }
};
